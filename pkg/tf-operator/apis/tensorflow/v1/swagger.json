{
  "swagger": "2.0",
  "info": {
    "description": "Python SDK for TF-Operator",
    "title": "tfjob",
    "version": "v0.1"
  },
  "paths": {},
  "definitions": {
    "v1.JobCondition": {
      "description": "JobCondition describes the state of the job at a certain point.",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/v1.Time"
        },
        "lastUpdateTime": {
          "description": "The last time this condition was updated.",
          "$ref": "#/definitions/v1.Time"
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of job condition.",
          "type": "string"
        }
      }
    },
    "v1.JobStatus": {
      "description": "JobStatus represents the current observed state of the training Job.",
      "required": [
        "conditions",
        "replicaStatuses"
      ],
      "properties": {
        "completionTime": {
          "description": "Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        },
        "conditions": {
          "description": "Conditions is an array of current observed job conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.JobCondition"
          }
        },
        "lastReconcileTime": {
          "description": "Represents last time when the job was reconciled. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        },
        "replicaStatuses": {
          "description": "ReplicaStatuses is map of ReplicaType and ReplicaStatus, specifies the status of each replica.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1.ReplicaStatus"
          }
        },
        "startTime": {
          "description": "Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
          "$ref": "#/definitions/v1.Time"
        }
      }
    },
    "v1.ReplicaSpec": {
      "description": "ReplicaSpec is a description of the replica",
      "properties": {
        "replicas": {
          "description": "Replicas is the desired number of replicas of the given template. If unspecified, defaults to 1.",
          "type": "integer",
          "format": "int32"
        },
        "restartPolicy": {
          "description": "Restart policy for all replicas within the job. One of Always, OnFailure, Never and ExitCode. Default to Never.",
          "type": "string"
        },
        "template": {
          "description": "Template is the object that describes the pod that will be created for this replica. RestartPolicy in PodTemplateSpec will be overide by RestartPolicy in ReplicaSpec",
          "$ref": "#/definitions/v1.PodTemplateSpec"
        }
      }
    },
    "v1.ReplicaStatus": {
      "description": "ReplicaStatus represents the current observed state of the replica.",
      "properties": {
        "active": {
          "description": "The number of actively running pods.",
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "description": "The number of pods which reached phase Failed.",
          "type": "integer",
          "format": "int32"
        },
        "succeeded": {
          "description": "The number of pods which reached phase Succeeded.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1.TFJob": {
      "description": "Represents a TFJob resource.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard Kubernetes object's metadata.",
          "$ref": "#/definitions/v1.ObjectMeta"
        },
        "spec": {
          "description": "Specification of the desired state of the TFJob.",
          "$ref": "#/definitions/v1.TFJobSpec"
        },
        "status": {
          "description": "Most recently observed status of the TFJob. Read-only (modified by the system).",
          "$ref": "#/definitions/v1.JobStatus"
        }
      }
    },
    "v1.TFJobList": {
      "description": "TFJobList is a list of TFJobs.",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of TFJobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1.TFJob"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "$ref": "#/definitions/v1.ListMeta"
        }
      }
    },
    "v1.TFJobSpec": {
      "description": "TFJobSpec is a desired state description of the TFJob.",
      "required": [
        "tfReplicaSpecs"
      ],
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Specifies the duration (in seconds) since startTime during which the job can remain active before it is terminated. Must be a positive integer. This setting applies only to pods where restartPolicy is OnFailure or Always.",
          "type": "integer",
          "format": "int64"
        },
        "backoffLimit": {
          "description": "Number of retries before marking this job as failed.",
          "type": "integer",
          "format": "int32"
        },
        "successPolicy": {
          "description": "SuccessPolicy defines the policy to mark the TFJob as succeeded. Default to \"\", using the default rules.",
          "type": "string"
        },
        "cleanPodPolicy": {
          "description": "Defines the policy for cleaning up pods after the TFJob completes. Defaults to Running.",
          "type": "string"
        },
        "tfReplicaSpecs": {
          "description": "A map of TFReplicaType (type) to ReplicaSpec (value). Specifies the TF cluster configuration. For example,\n  {\n    \"PS\": ReplicaSpec,\n    \"Worker\": ReplicaSpec,\n  }",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1.ReplicaSpec"
          }
        },
        "ttlSecondsAfterFinished": {
          "description": "Defines the TTL for cleaning up finished TFJobs (temporary before kubernetes adds the cleanup controller). It may take extra ReconcilePeriod seconds for the cleanup, since reconcile gets called periodically. Defaults to infinite.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
